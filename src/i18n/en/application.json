{
  "button.goDocument": {
    "message": "Document",
    "description": "Button text, clicking this button will go to the document page."
  },
  "button.goCredentials": {
    "message": "Credentials",
    "description": "Button text, clicking this button will go to the credentials page."
  },
  "button.buyMore": {
    "message": "Buy More",
    "description": "Button text, clicking this button will go to the buy more page."
  },
  "button.createOrder": {
    "message": "Create Order",
    "description": "Button text, clicking this button will go to the create order page."
  },
  "button.custom": {
    "message": "Custom",
    "description": "Button text, clicking this button will go to the custom page."
  },
  "button.query": {
    "message": "Query",
    "description": "Button text, clicking this button will go to the query page."
  },
  "button.usage": {
    "message": "Usage Records",
    "description": "Button text, clicking this button will go to the usage records page."
  },
  "field.application": {
    "message": "Application",
    "description": "Service's application."
  },
  "field.status": {
    "message": "Status",
    "description": "Application's status."
  },
  "field.id": {
    "message": "Application ID",
    "description": "Application's ID."
  },
  "field.remainingAmount": {
    "message": "Remaining Amount",
    "description": "Application's remaining amount."
  },
  "field.usedAmount": {
    "message": "Used Amount",
    "description": "Application's used amount."
  },
  "field.apiKey": {
    "message": "API Key",
    "description": "API key."
  },
  "field.service": {
    "message": "Service",
    "description": "Application's service."
  },
  "field.operation": {
    "message": "Operation",
    "description": "Application's operation."
  },
  "field.amount": {
    "message": "Amount",
    "description": "Application's amount."
  },
  "field.traceId": {
    "message": "Trace ID",
    "description": "API service's trace ID of an API call for the application, do not translate, keep as 'Trace ID'."
  },
  "field.shouldPayPrice": {
    "message": "Final Price",
    "description": "Application's final price."
  },
  "field.api": {
    "message": "API",
    "description": "This is an online service provided to users through API."
  },
  "field.proxy": {
    "message": "Proxy",
    "description": "This is an online service provided to users through HTTP proxy (for data transmission)."
  },
  "field.credential": {
    "message": "Credential",
    "description": "Application's credential."
  },
  "field.name": {
    "message": "Name",
    "description": "Application's name."
  },
  "field.package": {
    "message": "Package",
    "description": "Package represents different price packages, such as $100 for 10000 points, $200 for 20000 points."
  },
  "field.type": {
    "message": "Type",
    "description": "Application's type."
  },
  "field.freeAmount": {
    "message": "Free Amount",
    "description": "Application's free amount."
  },
  "field.extraPrice": {
    "message": "Price",
    "description": "Additional price of the application that the user should pay."
  },
  "message.alreadyApplied": {
    "message": "You have already applied for this service, please check the console",
    "description": "Message displayed to the user when they have already applied for this service."
  },
  "message.applySuccessfully": {
    "message": "Application successful",
    "description": "Message displayed to the user when they have successfully applied for this service."
  },
  "message.notApplied": {
    "message": "You have not applied for this service yet, please apply before using",
    "description": "Message displayed to the user when they have not applied for this service yet."
  },
  "message.yourApplication": {
    "message": "Your Application",
    "description": "Message displayed to the user when their application is being processed."
  },
  "message.unverified": {
    "message": "You need to complete real-name authentication before applying for this service",
    "description": "Message displayed to the user when they have not completed real-name authentication."
  },
  "message.goVerify": {
    "message": "Go to Real-name Authentication",
    "description": "Message displayed to the user when they have not completed real-name authentication."
  },
  "message.requiredParameter": {
    "message": "Required Parameter",
    "description": "Message displayed to the user when they have not entered the required parameter."
  },
  "message.example": {
    "message": "Example",
    "description": "Message displayed to the user as a placeholder for a required parameter."
  },
  "message.createCredentialSuccessfully": {
    "message": "Credential created successfully",
    "description": "Message displayed to the user when they have successfully created a credential."
  },
  "message.readPolicy": {
    "message": "I have read and agree to the",
    "description": "Message displayed to the user when they have read and agree to the policy."
  },
  "message.policy": {
    "message": "Data Technology Service Usage Agreement",
    "description": "Message displayed to the user when they have read and agree to the policy."
  },
  "message.notAgreePolicy": {
    "message": "You have not agreed to the Data Technology Service Usage Agreement yet",
    "description": "Message displayed to the user when they have not agreed to the policy."
  },
  "message.confirmApplying": {
    "message": "Confirm Applying for Service",
    "description": "Message displayed to the user when they confirm applying for a service."
  },
  "message.rotateCredential": {
    "message": "Reset Key",
    "description": "Message displayed to the user when they reset the key for a service."
  },
  "message.rotateCredentialConfirm": {
    "message": "Are you sure you want to reset the key? It cannot be recovered after reset",
    "description": "Message shown to the user when confirming a key reset."
  },
  "message.idDoesNotExist": {
    "message": "Application does not exist",
    "description": "Message shown to the user when the application does not exist."
  },
  "message.rotateCredentialSuccessfully": {
    "message": "Key reset successful",
    "description": "Message shown to the user when the key reset is successful."
  },
  "message.rotateCredentialFailed": {
    "message": "Key reset failed, please contact support",
    "description": "Message shown to the user when the key reset fails."
  },
  "message.updateFailed": {
    "message": "Update failed",
    "description": "Message shown to the user when the update fails."
  },
  "message.updateSuccessfully": {
    "message": "Update successful",
    "description": "Message shown to the user when the update is successful."
  },
  "title.buyService": {
    "message": "Buy Service",
    "description": "Title of the page when the user wants to buy a service."
  },
  "title.applicationRemainingCount": {
    "message": "Modify Quantity",
    "description": "Title of the page when the user wants to modify the application quantity."
  },
  "title.manageApplication": {
    "message": "Manage Application",
    "description": "Title of the page when the user wants to manage applications."
  }
}